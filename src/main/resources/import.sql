--DDL Statements
DROP TABLE IF EXISTS receipt_items;
DROP TABLE IF EXISTS receipts;
DROP TABLE IF EXISTS products;
DROP TABLE IF EXISTS customers;
DROP TABLE IF EXISTS pos_systems;
DROP TABLE IF EXISTS stores;

CREATE TABLE stores
(
    id                      BIGINT GENERATED BY DEFAULT AS IDENTITY,
    name                    VARCHAR(255),
    address                 VARCHAR(255),
    vat_registration_number VARCHAR(255),
    PRIMARY KEY (id)
);

CREATE TABLE pos_systems
(
    id     BIGINT GENERATED BY DEFAULT AS IDENTITY,
    name   VARCHAR(255),
    vendor VARCHAR(255),
    PRIMARY KEY (id)
);

CREATE TABLE customers
(
    id              SERIAL PRIMARY KEY,
    name            VARCHAR(255),
    address         VARCHAR(255),
    mobile_number   VARCHAR(255),
    email_address   VARCHAR(255),
    identifier_type VARCHAR(255) NOT NULL,
    CONSTRAINT unique_mobile_number UNIQUE (mobile_number),
    CONSTRAINT unique_email_address UNIQUE (email_address),
    CONSTRAINT check_identifier CHECK (
            (mobile_number IS NOT NULL AND email_address IS NULL AND identifier_type = 'mobile_number') OR
            (mobile_number IS NULL AND email_address IS NOT NULL AND identifier_type = 'email_address')
        )
);


CREATE TABLE products
(
    id       BIGINT GENERATED BY DEFAULT AS IDENTITY,
    name     VARCHAR(255),
    sku      VARCHAR(255),
    price    NUMERIC(19, 2),
    quantity INTEGER,
    PRIMARY KEY (id)
);

CREATE TABLE receipts
(
    id                BIGINT GENERATED BY DEFAULT AS IDENTITY,
    store_id          BIGINT,
    pos_system_id     BIGINT,
    customer_id       BIGINT,
    timestamp         TIMESTAMP,
    total_amount_paid NUMERIC(19, 2),
    PRIMARY KEY (id)
);

CREATE TABLE receipt_items
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY,
    receipt_id BIGINT,
    product_id BIGINT,
    quantity   INTEGER,
    PRIMARY KEY (id)
);

ALTER TABLE receipts
    ADD CONSTRAINT fk_receipt_store
        FOREIGN KEY (store_id)
            REFERENCES stores (id);

ALTER TABLE receipts
    ADD CONSTRAINT fk_receipt_pos_system
        FOREIGN KEY (pos_system_id)
            REFERENCES pos_systems (id);

ALTER TABLE receipts
    ADD CONSTRAINT fk_receipt_customer
        FOREIGN KEY (customer_id)
            REFERENCES customers (id);

ALTER TABLE receipt_items
    ADD CONSTRAINT fk_receipt_item_receipt
        FOREIGN KEY (receipt_id)
            REFERENCES receipts (id);

ALTER TABLE receipt_items
    ADD CONSTRAINT fk_receipt_item_product
        FOREIGN KEY (product_id)
            REFERENCES products (id);

--Insert Statements
INSERT INTO customers (first_name, last_name, email)
VALUES ('John', 'Doe', 'john.doe@example.com'),
       ('Jane', 'Doe', 'jane.doe@example.com'),
       ('Bob', 'Smith', 'bob.smith@example.com');

INSERT INTO pos_systems (name, vendor)
VALUES ('POS1', 'VendorA'),
       ('POS2', 'VendorB'),
       ('POS3', 'VendorC');

INSERT INTO products (name, sku, price, quantity)
VALUES ('ProductA', 'SKU001', 9.99, 100),
       ('ProductB', 'SKU002', 19.99, 50),
       ('ProductC', 'SKU003', 4.99, 200);

INSERT INTO stores (name, address, vat_registration_number)
VALUES ('StoreA', '123 Main St.', 'VAT123'),
       ('StoreB', '456 Oak St.', 'VAT456');

INSERT INTO receipts (receipt_id, store_id, pos_system_id, customer_id, timestamp, total_amount_paid)
VALUES ('123456', 1, 1, 1, '2022-01-01 10:00:00', 25.98),
       ('123458', 1, 1, 1, '2022-01-01 10:00:00',30.00);
