--DDL Statements
DROP TABLE IF EXISTS line_items;
DROP TABLE IF EXISTS receipts;
DROP TABLE IF EXISTS products;
DROP TABLE IF EXISTS customers;
DROP TABLE IF EXISTS pos_systems;
DROP TABLE IF EXISTS stores;

CREATE TABLE stores
(
    id                      BIGINT GENERATED BY DEFAULT AS IDENTITY,
    vat_registration_number VARCHAR(255),
    name                    VARCHAR(255),
    address                 VARCHAR(255),
    PRIMARY KEY (id)
);

CREATE TABLE pos_systems
(
    id     BIGINT GENERATED BY DEFAULT AS IDENTITY,
    name   VARCHAR(255),
    vendor VARCHAR(255),
    PRIMARY KEY (id)
);

CREATE TABLE customers
(
    id              SERIAL PRIMARY KEY,
    name            VARCHAR(255),
    mobile_number   VARCHAR(255),
    email_address   VARCHAR(255),
    identifier_type VARCHAR(255) NOT NULL,
    CONSTRAINT unique_mobile_number UNIQUE (mobile_number),
    CONSTRAINT unique_email_address UNIQUE (email_address),
    CONSTRAINT check_identifier CHECK (
            (mobile_number IS NOT NULL AND email_address IS NULL AND identifier_type = 'mobile_number') OR
            (mobile_number IS NULL AND email_address IS NOT NULL AND identifier_type = 'email_address')
        )
);

CREATE TABLE products
(
    id                BIGINT GENERATED BY DEFAULT AS IDENTITY,
    pos_system        VARCHAR(255) NOT NULL,
    store_id          BIGINT NOT NULL REFERENCES stores(id),
    sku               VARCHAR(255) NOT NULL,
    description       VARCHAR(255),
    price             NUMERIC(19, 2),
    quantity          INTEGER,
    CONSTRAINT unique_sku_per_store
        UNIQUE (store_id, sku, pos_system),
    PRIMARY KEY (id)
);


CREATE TABLE receipts
(
    id                BIGINT GENERATED BY DEFAULT AS IDENTITY,
    store_id          BIGINT,
    pos_system_id     BIGINT,
    customer_id       BIGINT,
    timestamp         TIMESTAMP,
    total_amount_paid NUMERIC(19, 2),
    PRIMARY KEY (id)
);

CREATE TABLE line_items
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY,
    receipt_id BIGINT,
    product_id BIGINT,
    quantity   INTEGER,
    PRIMARY KEY (id)
);

ALTER TABLE receipts
    ADD CONSTRAINT fk_receipt_store
        FOREIGN KEY (store_id)
            REFERENCES stores (id);

ALTER TABLE receipts
    ADD CONSTRAINT fk_receipt_pos_system
        FOREIGN KEY (pos_system_id)
            REFERENCES pos_systems (id);

ALTER TABLE receipts
    ADD CONSTRAINT fk_receipt_customer
        FOREIGN KEY (customer_id)
            REFERENCES customers (id);

ALTER TABLE line_items
    ADD CONSTRAINT fk_receipt_item_receipt
        FOREIGN KEY (receipt_id)
            REFERENCES receipts (id);

ALTER TABLE line_items
    ADD CONSTRAINT fk_receipt_item_product
        FOREIGN KEY (product_id)
            REFERENCES products (id);

--Insert Statements
INSERT INTO stores (vat_registration_number, name, address)
VALUES
    ('1234567890', 'Store A', '123 Main St.'),
    ('0987654321', 'Store B', '456 Elm St.'),
    ('5432109876', 'Store C', '789 Maple Ave.');

INSERT INTO pos_systems (name, vendor)
VALUES
    ('System A', 'Vendor X'),
    ('System B', 'Vendor Y'),
    ('System C', 'Vendor Z');

INSERT INTO customers (name, mobile_number, email_address, identifier_type)
VALUES
    ('John Doe', '123-456-7890', NULL, 'mobile_number'),
    ('Jane Smith', NULL, 'jane@example.com', 'email_address'),
    ('Bob Johnson', '987-654-3210', NULL, 'mobile_number');

INSERT INTO products (pos_system, store_id, sku, description, price, quantity)
VALUES
    ('System A', 1, 'SKU123', 'Product A', 10.99, 100),
    ('System B', 2, 'SKU456', 'Product B', 5.99, 50),
    ('System C', 3, 'SKU789', 'Product C', 20.00, 75);

INSERT INTO receipts (store_id, pos_system_id, customer_id, timestamp, total_amount_paid)
VALUES
    (1, 1, 1, '2023-05-01 10:00:00', 20.99),
    (2, 2, 2, '2023-05-01 12:00:00', 10.99),
    (3, 3, 3, '2023-05-01 14:00:00', 30.00);

INSERT INTO line_items (receipt_id, product_id, quantity)
VALUES
    (1, 1, 2),
    (1, 3, 1),
    (2, 2, 3),
    (3, 3, 2),
    (3, 1, 1);